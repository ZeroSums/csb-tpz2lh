{"version":3,"sources":["node_modules/ol/events/EventType.js","node_modules/ol/events/Event.js","node_modules/ol/ImageState.js","node_modules/ol/reproj/common.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/util.js","node_modules/ol/ImageBase.js","node_modules/ol/extent/Relationship.js","node_modules/ol/AssertionError.js","node_modules/ol/asserts.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/proj.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/reproj.js","node_modules/ol/events.js","node_modules/ol/reproj/Image.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/source/Source.js","node_modules/ol/source/Image.js","node_modules/ol/Image.js","node_modules/ol/source/wms.js","node_modules/ol/uri.js","node_modules/ol/source/ImageWMS.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/transform.js","node_modules/ol/color.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/size.js","node_modules/ol/Map.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/Tile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/TileRange.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/Feature.js","node_modules/ol/Geolocation.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/Text.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/flat.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/layer/Graticule.js","node_modules/ol/ImageCanvas.js","node_modules/ol/Overlay.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol/index.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/layer/BaseImage.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/layer/Image.js","js/index.js"],"names":["CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","BaseEvent","type","propagationStopped","defaultPrevented","target","stopPropagation","evt","preventDefault","IDLE","LOADING","LOADED","EMPTY","ERROR_THRESHOLD","Disposable","disposed","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","low","high","length","found","a","b","linearFindNearest","arr","direction","i","n","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","value","sort","isSorted","func","strict","compare","every","currentVal","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","includes","push","event","isString","Event","propagate","dispatching","pendingRemovals","ii","handleEvent","pr","removeEventListener","undefined","Object","keys","abstract","Error","uidCounter_","getUid","ol_uid","String","VERSION","ImageBase","EventTarget","extent","resolution","pixelRatio","state","pixelRatio_","dispatchEvent","EventType","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","messages","AssertionError","code","message","name","assert","assertion","errorCode","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","Math","min","max","buffer","clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","rotation","size","getRotatedViewport","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","METERS_PER_UNIT","PI","Projection","options","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","get","replace","add","transforms","source","destination","sourceCode","getCode","destinationCode","transform","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","precision","numberString","decimal","join","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","delta","closestOnCircle","circle","getRadius","d","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getLength","geometry","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","len","bearing","lon1","dByR","lat","asin","lon","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","forEach","projectionLike","getProj","pointResolution","getPointResolutionFunc","getUnits","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","console","warn","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","key","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","bind","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","src","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","addEventListener","error","createCanvasContext2D","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","element","offsetWidth","style","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","brokenDiagonalRendering_","drawTestTriangle","ctx","u1","u2","beginPath","moveTo","lineTo","closePath","save","clip","fillRect","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","fillStyle","getImageData","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","render","triangulation","sources","gutter","renderEdges","interpolate","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","image","drawImage","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","sourceImage","calculateSourceExtent","ImageState","sourcePixelRatio","getPixelRatio","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","canvas_","sourceListenerKey_","unlistenSource_","sourceState","getState","renderReprojected","getResolution","getImage","changed","reproject_","e","load","PROPERTYCHANGE","Observable","on","onInternal","onceInternal","un","unInternal","revision_","ol_key","unByKey","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","hasOwnProperty","assign","eventType","hasListener","ObjectEventType","silent","notify","set","Source","getProjection","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","viewResolver","viewRejector","viewPromise_","attributionLike","frameState","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","ImageSource","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","idx","getRevision","dispose","getImageInternal","getInterpolate","defaultImageLoadFunction","ImageWrapper","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","unlistenImage_","listenImage","handleImageLoad_","handleImageError_","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","DEFAULT_VERSION","appendParams","uri","params","keyParams","encodeURIComponent","qs","DECIMALS","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","crossOrigin_","url_","url","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","projectionObj","sourceProjectionObj","baseParams","getRequestUrl_","layers","LAYERS","mpu","findNearestResolution","imageResolution","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","handleImageChange","dpi","bbox","getAxisOrientation","substr","version","ADD","REMOVE","Property","LENGTH","CollectionEvent","Collection","array","unique_","unique","array_","assertUnique_","updateLength_","pop","f","elem","CollectionEventType","removeAt","insertAt","prev","except","transformStringDiv","tmp_","create","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","makeScale","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","transformString","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","startsWith","normalize","map","Number","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","getKey","maxCacheSize","expire","shared","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","states","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","setMap","addChangeListener","handleSourcePropertyChange_","setSource","getLayerState","getSource","handleSourceChange_","pixel","getFeatures","getData","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","inView","viewState","zoom","MapRenderer","map_","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","hasRenderer","getWrapX","order","distanceSq","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","label","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","getMap","calculateMatrices2D","dispatchRenderEvent","declutterLayers","previousElement","layerIndex","getSourceState","renderDeclutter","scheduleExpireIconCache","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","pos","getLayerStatesArray","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","shiftX","shiftY","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","transform2D","anchor","anchorX","anchorY","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","closestPoint","minSquaredDistance","getClosestPoint","NaN","closestPointXY","computeExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","SimpleGeometry","layout","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","getStrideForLayout","nesting","getLayoutForStride","getStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","setLayout","Point","applyProperties","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","startAngle","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","padding_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","newOptions","getProperties","getZoom","getCenterInternal","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","animationCallback","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","constrainResolution","getResolutionForExtentInternal","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","rotatedExtentForGeometry","centerRot","centerX","centerY","getConstrainedCenter","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","adjustResolutionInternal","getInteracting","adjustResolution","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","cancelAnimations","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","handleToggle_","classList","toggle","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","animate","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","ACTIVE","Interaction","setActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","adjustCenterInternal","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","top","getOverlayContainer","createOrUpdateGeometry","render_","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","getGeometry","setPixels","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","num","hasArea","toSize","removeLayerMapProperty","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","getControls","getInteractions","getLayerGroup","overlay","getOverlays","features","forEachFeatureAtPixel","addLayersFrom","layerGroup","hasFeatureAtCoordinate","eventPosition","changedTouches","getTarget","group","renderer","ready","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","tileQueue","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","defaultView","updateSize","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","previousFrameState","getHints","declutterTree","usedTiles","mapId","renderTargets","nextExtent","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","parseFloat","getClientRects","setSize","setViewportSize","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","setState","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","sourceProjExtent","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","entry","value_","key_","newer","older","containsKey","getKeyZXY","getCacheKeyForTileKey","substring","lastIndexOf","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","TileCache","release","peekLast","peekFirstKey","TILELOADSTART","TILELOADEND","TILELOADERROR","TileRange","tmpTileCoord","TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getOrigin","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","getTileCoordCenter","extentFromProjection","getTileCoordForCoordAndZ","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","expireCache","tileCoordKey","covered","getResolutions","getTileGridForProjection","getTilePixelRatio","scaleSize","tileCount","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getPrototypeOf","uid","tileState","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","newTile","getTileInternal","refreshInterimChain","createTile_","tilegrid","proj","imageTile","XYZ","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","hasProperties","setGeometryName","getGeometryName","getStyle","setStyle","handleGeometryChange_","createStyleFunction","removeChangeListener","styles","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","GeolocationError","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","Fill","color_","getColor","interpolatePoint","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","lineString","getCoordinateAt","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","asColorLike","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","getFill","getPoints","getRadius2","getStroke","setOpacity","getScaleArray","createHitDetectionCanvas_","renderOptions","draw_","strokeWidth","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","CircleStyle","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","concat","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","taintedTestContext","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","getSrc","getImageState","getHitDetectionImage","iconImageSize","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","RBush","renderOrder","styleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getEnds","appendFlatPointCoordinates","endGeometry","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","sharedData","getAnchor","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","setFillStrokeStyle","p0","p1","p2","p3","p","flatEnd","flatOffset","oo","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","loadedTileCallback","forEachLoadedTile","renderIfReadyAndVisible","getLayer","pixelContext","createPixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","getBackground","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","textIsArray","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","setStrokeStyle_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","contextScale","imageOrLabel","dimensions","box","strokePadding","replayTextBackground_","repeatSize","createLabel","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","insert","imageArgs","imageDeclutterBox","collides","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute_","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","executor","zs","executeHitDetection","builderTypes","execute","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","originalStyle","setColor","setText","getImageSize","imgContext","setImage","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","getBuilder","textReplay","drawText","renderFeature","replayGroup","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","drawCustom","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","executorGroup","vectorSource","endWorld","world","getRenderTransform","compositionContext","setupCompositionContext_","renderWorlds","releaseCompositionContext_","transformToString","useContainer","preRender","clipped","layerExtent","intersectsExtent","clipUnrotated","postRender","executorGroups","item","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","loadFeatures","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","search","forEach_","getAll","getInExtent","toJSON","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","VectorSourceEvent","VectorSource","loader_","format_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","setLoader","toContext","scaleTransform","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","getRenderPixel","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","greatCircleArc","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","meridian","epsg4326Projection","parallel","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","setRenderOrder","realWorldExtent","removeLoadedExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","getFeaturesCollection","poolIndex","minLat","maxLat","getMeridian_","geom","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","drawFeature","getParallelPoint_","getInterval_","validCenterP","centerLonLat","cnt","centerLon","centerLat","validExtentP","validExtent","addMeridian_","addParallel_","clampedLat","bottom","clampedBottom","clampedTop","clampedLeft","clampedRight","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","error_","handleLoad_","ELEMENT","OFFSET","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","getPosition","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","posX","posY","VectorRenderTile","getSourceTiles","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","hasContext","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","features_","setFeatures","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","getRenderSource","tileOrigin","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","tileCoordIntersectsViewport","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","forEachTileCoordParentTileRange","canvasScale","toTransformString","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","enqueue","useTile","updateCacheSize","TileLayer","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","loadImage","imageExtent","imageMapWidth","imageMapHeight","dw","dh","previousAlpha","ImageLayer","closer","onclick","blur","popup","addOverlay","marker","vienna","popover","bootstrap","Popover","getInstance","content","html","show"],"mappings":"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","file":"js.996064b5.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.getInterpolate()\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes|\n *     'error', Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const canvasPixelRatio = event.inversePixelTransform[0];\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      }.bind(this);\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      }.bind(this);\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","import 'ol/ol.css';\r\nimport 'ol-layerswitcher/dist/ol-layerswitcher.css';\r\n\r\nimport ImageWMS from 'ol/source/ImageWMS';\r\nimport Map from 'ol/Map';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport View from 'ol/View';\r\nimport { Overlay } from 'ol';\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport ImageLayer from 'ol/layer/Image';\r\nimport { toStringHDMS } from 'ol/coordinate';\r\n\r\nlet map = new Map({\r\n\ttarget: 'map',\r\n\tlayers: [\r\n\t\tnew TileLayer({\r\n\t\t\tsource: new XYZ({\r\n\t\t\t\turl:\r\n\t\t\t\t\t'https://maps.geoapify.com/v1/tile/dark-matter/{z}/{x}/{y}.png?apiKey=' +\r\n\t\t\t\t\t'f37224251b89444b9394b4d49f3551c6'\r\n\t\t\t})\r\n\t\t}),\r\n\t\tnew ImageLayer({\r\n\t\t\textent: [-9074603.998, 5483898.1573, -8885040.1679, 5629434.2591],\r\n\t\t\tsource: new ImageWMS({\r\n\t\t\t\turl: 'http://10.90.30.74:8085/geoserver/wms',\r\n\t\t\t\tparams: { LAYERS: 'postgres-db:nominal_trunkline0' },\r\n\t\t\t\tratio: 1,\r\n\t\t\t\tserverType: 'geoserver'\r\n\t\t\t})\r\n\t\t}),\r\n\t\tnew ImageLayer({\r\n\t\t\textent: [-9074603.998, 5483898.1573, -8885040.1679, 5629434.2591],\r\n\t\t\tsource: new ImageWMS({\r\n\t\t\t\turl: 'http://10.90.30.74:8085/geoserver/wms',\r\n\t\t\t\tparams: { LAYERS: 'postgres-db:nominal_pedestal0' },\r\n\t\t\t\tratio: 1,\r\n\t\t\t\tserverType: 'geoserver'\r\n\t\t\t})\r\n\t\t})\r\n\t],\r\n\tview: new View({\r\n\t\tcenter: fromLonLat([-80.94349, 44.56717]),\r\n\t\tzoom: 10\r\n\t})\r\n});\r\n\r\nlet closer = document.getElementById('popup-closer');\r\n/**\r\n * Create an overlay to anchor the popup to the map.\r\n */\r\n/**\r\n * Add a click handler to hide the popup.\r\n * @return {boolean} Don't follow the href.\r\n */\r\ncloser.onclick = function () {\r\n\tOverlay.setPosition(0, 0, 0);\r\n\tcloser.blur();\r\n\treturn false;\r\n};\r\n/**\r\n * Our Map Feature Info Below\r\n *\r\n */\r\nconst pos = fromLonLat([-80.94349, 44.56717]);\r\n\r\n// Popup showing the position the user clicked\r\nconst popup = new Overlay({\r\n\telement: document.getElementById('popup')\r\n});\r\nmap.addOverlay(popup);\r\n\r\n// Vienna marker\r\nconst marker = new Overlay({\r\n\tposition: pos,\r\n\t// positioning: 'center-center',\r\n\telement: document.getElementById('marker'),\r\n\tstopEvent: false\r\n});\r\nmap.addOverlay(marker);\r\n\r\n// Vienna label\r\nconst vienna = new Overlay({\r\n\tposition: pos,\r\n\telement: document.getElementById('vienna')\r\n});\r\nmap.addOverlay(vienna);\r\n\r\nconst element = popup.getElement();\r\nmap.on('click', function (evt) {\r\n\tconst coordinate = evt.coordinate;\r\n\tconst hdms = toStringHDMS(toLonLat(coordinate));\r\n\tpopup.setPosition(coordinate);\r\n\tlet popover = bootstrap.Popover.getInstance(element);\r\n\tif (popover) {\r\n\t\tpopover.dispose();\r\n\t}\r\n\tpopover = new bootstrap.Popover(element, {\r\n\t\tanimation: false,\r\n\t\tcontainer: element,\r\n\t\tcontent: '<p>The location you clicked was:</p><code>' + hdms + '</code>',\r\n\t\thtml: true,\r\n\t\tplacement: 'top',\r\n\t\ttitle: 'GIS@GBTel'\r\n\t});\r\n\tpopover.show();\r\n});\r\n"]}